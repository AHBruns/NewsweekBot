{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { credentials, endpoints, dbQueries } from \"lib/constants\";\nimport https from \"https\";\n\nfunction respondToTweet(id) {\n  console.log(`RESPONDING TO ${id}`);\n\n  try {\n    https.request(endpoints.twitter.replyToTweet(id), {\n      headers: {\n        Authorization: `Bearer ${credentials.twitter.bearerToken}`\n      },\n      method: \"POST\"\n    }, twitterRes => {\n      console.log(twitterRes.statusCode, twitterRes.statusMessage);\n      return;\n      let body = \"\";\n      twitterRes.on(\"data\", chunk => body += chunk);\n      twitterRes.on(\"end\", () => {\n        console.log(JSON.parse(body));\n      });\n      twitterRes.on(\"error\", err => console.error(err));\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction respondToTweets(tweets, persistentVariables, res) {\n  if (tweets === undefined || persistentVariables === undefined) return;\n  const minimumAge = new Date(persistentVariables.filter(({\n    key\n  }) => key === \"TIME_OF_LAST_ACTION_TAKEN\")[0].value);\n  let newMinimumAge = minimumAge;\n  tweets.map(tweet => _objectSpread(_objectSpread({}, tweet), {}, {\n    created_at: new Date(tweet.created_at)\n  })).forEach(tweet => {\n    if (tweet.created_at > minimumAge) {\n      respondToTweet(tweet.id);\n      console.log(\"RESPONDED\");\n      res.end();\n      return;\n      if (tweet.created_at > newMinimumAge) newMinimumAge = tweet.created_at;\n    }\n  });\n\n  if (newMinimumAge != minimumAge) {\n    let dbReq = https.request(endpoints.db, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(dbQueries.setTimeOfLastActionTaken(newMinimumAge.toString()))\n      },\n      method: \"POST\"\n    }, dbRes => {\n      let body = \"\";\n      dbRes.on(\"data\", chunk => body += chunk);\n      dbRes.on(\"end\", () => {\n        res.end(); // done\n      });\n    });\n    dbReq.write(dbQueries.setTimeOfLastActionTaken(newMinimumAge.toString()));\n    dbReq.end();\n  } else res.end(); // done\n\n}\n\nexport default ((req, res) => {\n  let persistentVariables = undefined;\n  let tweets = undefined;\n  let dbReq = https.request(endpoints.db, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Content-Length\": Buffer.byteLength(dbQueries.getPeristentVariablesQuery)\n    },\n    method: \"POST\"\n  }, dbRes => {\n    let body = \"\";\n    dbRes.on(\"data\", chunk => body += chunk);\n    dbRes.on(\"end\", () => {\n      persistentVariables = JSON.parse(body).data.newsweek_bot_constants;\n      respondToTweets(tweets, persistentVariables, res);\n    });\n  });\n  dbReq.write(dbQueries.getPeristentVariablesQuery);\n  dbReq.end();\n  https.get(endpoints.twitter.getTweets, {\n    headers: {\n      Authorization: `Bearer ${credentials.twitter.bearerToken}`\n    }\n  }, twitterRes => {\n    let body = \"\";\n    twitterRes.on(\"data\", chunk => body += chunk);\n    twitterRes.on(\"end\", () => {\n      tweets = JSON.parse(body).data;\n      respondToTweets(tweets, persistentVariables, res);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/ahb/code/newsweek-twitter-bot/pages/api/index.ts"],"names":["credentials","endpoints","dbQueries","https","respondToTweet","id","console","log","request","twitter","replyToTweet","headers","Authorization","bearerToken","method","twitterRes","statusCode","statusMessage","body","on","chunk","JSON","parse","err","error","respondToTweets","tweets","persistentVariables","res","undefined","minimumAge","Date","filter","key","value","newMinimumAge","map","tweet","created_at","forEach","end","dbReq","db","Buffer","byteLength","setTimeOfLastActionTaken","toString","dbRes","write","req","getPeristentVariablesQuery","data","newsweek_bot_constants","get","getTweets"],"mappings":";;;;;;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAkD,eAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,CAAwBC,EAAxB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBF,EAAG,EAAhC;;AACA,MAAI;AACFF,IAAAA,KAAK,CAACK,OAAN,CACEP,SAAS,CAACQ,OAAV,CAAkBC,YAAlB,CAA+BL,EAA/B,CADF,EAEE;AACEM,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASZ,WAAW,CAACS,OAAZ,CAAoBI,WAAY;AAA3D,OADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAFF,EAMGC,UAAD,IAAgB;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAU,CAACC,UAAvB,EAAmCD,UAAU,CAACE,aAA9C;AACA;AACA,UAAIC,IAAI,GAAG,EAAX;AACAH,MAAAA,UAAU,CAACI,EAAX,CAAc,MAAd,EAAuBC,KAAD,IAAYF,IAAI,IAAIE,KAA1C;AACAL,MAAAA,UAAU,CAACI,EAAX,CAAc,KAAd,EAAqB,MAAM;AACzBb,QAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAZ;AACD,OAFD;AAGAH,MAAAA,UAAU,CAACI,EAAX,CAAc,OAAd,EAAwBI,GAAD,IAASjB,OAAO,CAACkB,KAAR,CAAcD,GAAd,CAAhC;AACD,KAfH;AAiBD,GAlBD,CAkBE,OAAOA,GAAP,EAAY;AACZjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD;AACF;;AAED,SAASE,eAAT,CACEC,MADF,EAEEC,mBAFF,EAGEC,GAHF,EAIE;AACA,MAAIF,MAAM,KAAKG,SAAX,IAAwBF,mBAAmB,KAAKE,SAApD,EAA+D;AAE/D,QAAMC,UAAU,GAAG,IAAIC,IAAJ,CACjBJ,mBAAmB,CAACK,MAApB,CACE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAaA,GAAG,KAAK,2BADvB,EAEE,CAFF,EAEKC,KAHY,CAAnB;AAMA,MAAIC,aAAa,GAAGL,UAApB;AAEAJ,EAAAA,MAAM,CACHU,GADH,CACQC,KAAD,oCAAiBA,KAAjB;AAAwBC,IAAAA,UAAU,EAAE,IAAIP,IAAJ,CAASM,KAAK,CAACC,UAAf;AAApC,IADP,EAEGC,OAFH,CAEYF,KAAD,IAAW;AAClB,QAAIA,KAAK,CAACC,UAAN,GAAmBR,UAAvB,EAAmC;AACjC1B,MAAAA,cAAc,CAACiC,KAAK,CAAChC,EAAP,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAqB,MAAAA,GAAG,CAACY,GAAJ;AACA;AACA,UAAIH,KAAK,CAACC,UAAN,GAAmBH,aAAvB,EAAsCA,aAAa,GAAGE,KAAK,CAACC,UAAtB;AACvC;AACF,GAVH;;AAYA,MAAIH,aAAa,IAAIL,UAArB,EAAiC;AAC/B,QAAIW,KAAK,GAAGtC,KAAK,CAACK,OAAN,CACVP,SAAS,CAACyC,EADA,EAEV;AACE/B,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,0BAAkBgC,MAAM,CAACC,UAAP,CAChB1C,SAAS,CAAC2C,wBAAV,CAAmCV,aAAa,CAACW,QAAd,EAAnC,CADgB;AAFX,OADX;AAOEhC,MAAAA,MAAM,EAAE;AAPV,KAFU,EAWTiC,KAAD,IAAW;AACT,UAAI7B,IAAI,GAAG,EAAX;AACA6B,MAAAA,KAAK,CAAC5B,EAAN,CAAS,MAAT,EAAkBC,KAAD,IAAYF,IAAI,IAAIE,KAArC;AACA2B,MAAAA,KAAK,CAAC5B,EAAN,CAAS,KAAT,EAAgB,MAAM;AACpBS,QAAAA,GAAG,CAACY,GAAJ,GADoB,CACT;AACZ,OAFD;AAGD,KAjBS,CAAZ;AAmBAC,IAAAA,KAAK,CAACO,KAAN,CAAY9C,SAAS,CAAC2C,wBAAV,CAAmCV,aAAa,CAACW,QAAd,EAAnC,CAAZ;AACAL,IAAAA,KAAK,CAACD,GAAN;AACD,GAtBD,MAsBOZ,GAAG,CAACY,GAAJ,GA7CP,CA6CkB;;AACnB;;AAED,gBAAe,CAACS,GAAD,EAAsBrB,GAAtB,KAA+C;AAC5D,MAAID,mBAAmB,GAAGE,SAA1B;AACA,MAAIH,MAAM,GAAGG,SAAb;AAEA,MAAIY,KAAK,GAAGtC,KAAK,CAACK,OAAN,CACVP,SAAS,CAACyC,EADA,EAEV;AACE/B,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,wBAAkBgC,MAAM,CAACC,UAAP,CAChB1C,SAAS,CAACgD,0BADM;AAFX,KADX;AAOEpC,IAAAA,MAAM,EAAE;AAPV,GAFU,EAWTiC,KAAD,IAAW;AACT,QAAI7B,IAAI,GAAG,EAAX;AACA6B,IAAAA,KAAK,CAAC5B,EAAN,CAAS,MAAT,EAAkBC,KAAD,IAAYF,IAAI,IAAIE,KAArC;AACA2B,IAAAA,KAAK,CAAC5B,EAAN,CAAS,KAAT,EAAgB,MAAM;AACpBQ,MAAAA,mBAAmB,GAAGN,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBiC,IAAjB,CAAsBC,sBAA5C;AACA3B,MAAAA,eAAe,CAACC,MAAD,EAASC,mBAAT,EAA8BC,GAA9B,CAAf;AACD,KAHD;AAID,GAlBS,CAAZ;AAoBAa,EAAAA,KAAK,CAACO,KAAN,CAAY9C,SAAS,CAACgD,0BAAtB;AACAT,EAAAA,KAAK,CAACD,GAAN;AAEArC,EAAAA,KAAK,CAACkD,GAAN,CACEpD,SAAS,CAACQ,OAAV,CAAkB6C,SADpB,EAEE;AACE3C,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASZ,WAAW,CAACS,OAAZ,CAAoBI,WAAY;AAA3D;AADX,GAFF,EAKGE,UAAD,IAAgB;AACd,QAAIG,IAAI,GAAG,EAAX;AACAH,IAAAA,UAAU,CAACI,EAAX,CAAc,MAAd,EAAuBC,KAAD,IAAYF,IAAI,IAAIE,KAA1C;AACAL,IAAAA,UAAU,CAACI,EAAX,CAAc,KAAd,EAAqB,MAAM;AACzBO,MAAAA,MAAM,GAAGL,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBiC,IAA1B;AACA1B,MAAAA,eAAe,CAACC,MAAD,EAASC,mBAAT,EAA8BC,GAA9B,CAAf;AACD,KAHD;AAID,GAZH;AAcD,CAzCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport { credentials, endpoints, dbQueries } from \"lib/constants\";\nimport https from \"https\";\n\nfunction respondToTweet(id) {\n  console.log(`RESPONDING TO ${id}`);\n  try {\n    https.request(\n      endpoints.twitter.replyToTweet(id),\n      {\n        headers: { Authorization: `Bearer ${credentials.twitter.bearerToken}` },\n        method: \"POST\",\n      },\n      (twitterRes) => {\n        console.log(twitterRes.statusCode, twitterRes.statusMessage);\n        return;\n        let body = \"\";\n        twitterRes.on(\"data\", (chunk) => (body += chunk));\n        twitterRes.on(\"end\", () => {\n          console.log(JSON.parse(body));\n        });\n        twitterRes.on(\"error\", (err) => console.error(err));\n      }\n    );\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction respondToTweets(\n  tweets: { id: string; text: string; created_at: string }[],\n  persistentVariables: { key: string; value: string }[],\n  res: NextApiResponse\n) {\n  if (tweets === undefined || persistentVariables === undefined) return;\n\n  const minimumAge = new Date(\n    persistentVariables.filter(\n      ({ key }) => key === \"TIME_OF_LAST_ACTION_TAKEN\"\n    )[0].value\n  );\n\n  let newMinimumAge = minimumAge;\n\n  tweets\n    .map((tweet) => ({ ...tweet, created_at: new Date(tweet.created_at) }))\n    .forEach((tweet) => {\n      if (tweet.created_at > minimumAge) {\n        respondToTweet(tweet.id);\n        console.log(\"RESPONDED\");\n        res.end();\n        return;\n        if (tweet.created_at > newMinimumAge) newMinimumAge = tweet.created_at;\n      }\n    });\n\n  if (newMinimumAge != minimumAge) {\n    let dbReq = https.request(\n      endpoints.db,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Content-Length\": Buffer.byteLength(\n            dbQueries.setTimeOfLastActionTaken(newMinimumAge.toString())\n          ),\n        },\n        method: \"POST\",\n      },\n      (dbRes) => {\n        let body = \"\";\n        dbRes.on(\"data\", (chunk) => (body += chunk));\n        dbRes.on(\"end\", () => {\n          res.end(); // done\n        });\n      }\n    );\n    dbReq.write(dbQueries.setTimeOfLastActionTaken(newMinimumAge.toString()));\n    dbReq.end();\n  } else res.end(); // done\n}\n\nexport default (req: NextApiRequest, res: NextApiResponse) => {\n  let persistentVariables = undefined;\n  let tweets = undefined;\n\n  let dbReq = https.request(\n    endpoints.db,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(\n          dbQueries.getPeristentVariablesQuery\n        ),\n      },\n      method: \"POST\",\n    },\n    (dbRes) => {\n      let body = \"\";\n      dbRes.on(\"data\", (chunk) => (body += chunk));\n      dbRes.on(\"end\", () => {\n        persistentVariables = JSON.parse(body).data.newsweek_bot_constants;\n        respondToTweets(tweets, persistentVariables, res);\n      });\n    }\n  );\n  dbReq.write(dbQueries.getPeristentVariablesQuery);\n  dbReq.end();\n\n  https.get(\n    endpoints.twitter.getTweets,\n    {\n      headers: { Authorization: `Bearer ${credentials.twitter.bearerToken}` },\n    },\n    (twitterRes) => {\n      let body = \"\";\n      twitterRes.on(\"data\", (chunk) => (body += chunk));\n      twitterRes.on(\"end\", () => {\n        tweets = JSON.parse(body).data;\n        respondToTweets(tweets, persistentVariables, res);\n      });\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}