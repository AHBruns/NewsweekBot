{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { credentials, endpoints, getPeristentVariablesQuery } from \"lib/constants\";\nimport https from \"https\";\n\nfunction respondToTweet(id) {\n  console.log(`RESPONDING TO ${id}`);\n}\n\nfunction respondToTweets(tweets, persistentVariables, res) {\n  if (tweets === undefined || persistentVariables === undefined) return;\n  const minimumAge = new Date(persistentVariables.filter(({\n    key\n  }) => key === \"TIME_OF_LAST_ACTION_TAKEN\")[0].value);\n  let newMinimumAge = minimumAge;\n  tweets.map(tweet => _objectSpread(_objectSpread({}, tweet), {}, {\n    created_at: new Date(tweet.created_at)\n  })).forEach(tweet => {\n    if (tweet.created_at > minimumAge) {\n      respondToTweet(tweet.id);\n      if (tweet.created_at > newMinimumAge) newMinimumAge = tweet.created_at;\n    }\n  });\n  console.log(newMinimumAge);\n  res.end();\n}\n\nexport default ((req, res) => {\n  let persistentVariables = undefined;\n  let tweets = undefined;\n  let dbReq = https.request(endpoints.db, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Content-Length\": Buffer.byteLength(getPeristentVariablesQuery)\n    },\n    method: \"POST\"\n  }, dbRes => {\n    let body = \"\";\n    dbRes.on(\"data\", chunk => body += chunk);\n    dbRes.on(\"end\", () => {\n      persistentVariables = JSON.parse(body).data.newsweek_bot_constants;\n      respondToTweets(tweets, persistentVariables, res);\n    });\n  });\n  dbReq.write(getPeristentVariablesQuery);\n  dbReq.end();\n  https.get(endpoints.twitter, {\n    headers: {\n      Authorization: `Bearer ${credentials.twitter.bearerToken}`\n    }\n  }, twitterRes => {\n    let body = \"\";\n    twitterRes.on(\"data\", chunk => body += chunk);\n    twitterRes.on(\"end\", () => {\n      tweets = JSON.parse(body).data;\n      respondToTweets(tweets, persistentVariables, res);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/ahb/code/newsweek-twitter-bot/pages/api/index.ts"],"names":["credentials","endpoints","getPeristentVariablesQuery","https","respondToTweet","id","console","log","respondToTweets","tweets","persistentVariables","res","undefined","minimumAge","Date","filter","key","value","newMinimumAge","map","tweet","created_at","forEach","end","req","dbReq","request","db","headers","Buffer","byteLength","method","dbRes","body","on","chunk","JSON","parse","data","newsweek_bot_constants","write","get","twitter","Authorization","bearerToken","twitterRes"],"mappings":"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","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport {\n  credentials,\n  endpoints,\n  getPeristentVariablesQuery,\n} from \"lib/constants\";\nimport https from \"https\";\n\nfunction respondToTweet(id) {\n  console.log(`RESPONDING TO ${id}`);\n}\n\nfunction respondToTweets(\n  tweets: { id: string; text: string; created_at: string }[],\n  persistentVariables: { key: string; value: string }[],\n  res: NextApiResponse\n) {\n  if (tweets === undefined || persistentVariables === undefined) return;\n\n  const minimumAge = new Date(\n    persistentVariables.filter(\n      ({ key }) => key === \"TIME_OF_LAST_ACTION_TAKEN\"\n    )[0].value\n  );\n\n  let newMinimumAge = minimumAge;\n\n  tweets\n    .map((tweet) => ({ ...tweet, created_at: new Date(tweet.created_at) }))\n    .forEach((tweet) => {\n      if (tweet.created_at > minimumAge) {\n        respondToTweet(tweet.id);\n        if (tweet.created_at > newMinimumAge) newMinimumAge = tweet.created_at;\n      }\n    });\n\n  console.log(newMinimumAge);\n\n  res.end();\n}\n\nexport default (req: NextApiRequest, res: NextApiResponse) => {\n  let persistentVariables = undefined;\n  let tweets = undefined;\n\n  let dbReq = https.request(\n    endpoints.db,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(getPeristentVariablesQuery),\n      },\n      method: \"POST\",\n    },\n    (dbRes) => {\n      let body = \"\";\n      dbRes.on(\"data\", (chunk) => (body += chunk));\n      dbRes.on(\"end\", () => {\n        persistentVariables = JSON.parse(body).data.newsweek_bot_constants;\n        respondToTweets(tweets, persistentVariables, res);\n      });\n    }\n  );\n  dbReq.write(getPeristentVariablesQuery);\n  dbReq.end();\n\n  https.get(\n    endpoints.twitter,\n    {\n      headers: { Authorization: `Bearer ${credentials.twitter.bearerToken}` },\n    },\n    (twitterRes) => {\n      let body = \"\";\n      twitterRes.on(\"data\", (chunk) => (body += chunk));\n      twitterRes.on(\"end\", () => {\n        tweets = JSON.parse(body).data;\n        respondToTweets(tweets, persistentVariables, res);\n      });\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}